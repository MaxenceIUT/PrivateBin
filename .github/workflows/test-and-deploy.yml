name: CI / CD pipeline

on:
  push:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Cloning repository
        uses: actions/checkout@v3

      - name: "Installing Composer"
        uses: php-actions/composer@v6

      - name: Running tests using phpunit
        uses: php-actions/phpunit@v3
        env:
          XDEBUG_MODE: coverage
        with:
          version: 9.6.11
          memory_limit: 4G
          configuration: "./phpunit.xml"
          php_extensions: "gd xdebug"
          coverage_cobertura: "./coverage.cobertura.xml"

      - name: Generate code coverage report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: "./coverage.cobertura.xml"
          badge: true
          fail_below_min: true
          format: markdown
          hide_complexity: true
          output: "file"
          thresholds: "50 75"

      - name: Tests and coverage summary
        run: |
          cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

      - name: PHP Code Sniffer
        uses: php-actions/phpcs@v1
        with:
          php_version: 8.1
          path: lib/
          standard: ./cfg/phpcs.xml

      - name: PHP Mess Detector
        uses: php-actions/phpmd@v1
        with:
          php_version: 8.1
          path: lib/
          output: text
          ruleset: ./cfg/phpmd_ruleset.xml
          args: "--ignore-violations-on-exit"

      - name: PHPStan Static Analysis
        uses: php-actions/phpstan@v3
        with:
          php_version: 8.1
          php_extensions: "xdebug gd"
          path: lib/
          level: 7
          memory_limit: 4G
          args: "--no-progress --no-interaction"

  cd:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy files to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: "./*"
          target: "/usr/share/nginx/html/PrivateBin-latest/"
          timeout: 120s

      - name: Deploy on server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script_stop: true
          # We move the current PrivateBin folder to PrivateBin-backup-<date>, then move the PrivateBin-latest folder back into PrivateBin
          # If something goes wrong, we can just move the PrivateBin-backup-<date> folder back to PrivateBin
          script: |
            cd /usr/share/nginx/html/
            cp -r PrivateBin PrivateBin-backup-$(date +%Y-%m-%d-%H-%M)
            cp -r PrivateBin-latest PrivateBin
            rm -rf PrivateBin-latest